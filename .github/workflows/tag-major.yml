name: Tag Major
on:
  release:
    types: [published]

permissions:
  contents: write

jobs:
  # Needed to not trigger workflow recursively
  check-major:
    name: Check Tag is Major
    runs-on: ubuntu-latest
    outputs:
      is-major: ${{ steps.check.outputs.is-major }}
    steps:
      - name: Check if tag is major
        id: check
        run: |
          if [[ "${{ github.ref_name }}" =~ ^v(0|[1-9][0-9]*)$ ]]; then
            echo "is-major=true" >> $GITHUB_OUTPUT
          else
            echo "is-major=false" >> $GITHUB_OUTPUT
          fi

  create-major-tag:
    name: Create Major Tag
    needs: check-major
    if: needs.check-major.outputs.is-major == 'false'
    runs-on: ubuntu-latest
    steps:
      - name: Get major version
        id: version
        run: |
          MAJOR=$(echo ${{ github.ref_name }} | cut -d'.' -f1 | cut -c2-)
          echo "major=$MAJOR" >> $GITHUB_OUTPUT
      - name: Delete existing release and tag
        continue-on-error: true
        uses: actions/github-script@v7
        with:
          script: |
            const releases = await octokit.rest.repos.listReleases({
              owner: context.repo.owner,
              repo: context.repo.repo,
            });
            const releaseIds = (releases.data ?? [])
              .filter(({ tag_name }) => tag_name === tagName)
              .map(({ id }) => id);
            await Promise.all(releaseIds.map((id) => octokit.rest.repos.deleteRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: id,
            })))
            await octokit.rest.git.deleteRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: `tags/v${{ steps.version.outputs.major }}`,
            });
      - name: Create release
        uses: release-drafter/release-drafter@v5
        with:
          disable-autolabeler: true
          publish: true
          version: v${{ steps.version.outputs.major }}
          tag: v${{ steps.version.outputs.major }}
        env:
          GITHUB_TOKEN: ${{ github.token }}
